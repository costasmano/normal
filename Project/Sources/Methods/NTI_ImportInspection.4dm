//%attributes = {"invisible":true}
//Method: NTI_ImportInspection
//Description
// import a TIN inspection from a file generated by NTI_ExportInspection
// Parameters
// ----------------------------------------------------
If (False:C215)
	// ----------------------------------------------------
	//User name (OS): Costas Manousakis
	//User (4D) : Designer
	//Date and time: 05/27/16, 09:23:23
	// ----------------------------------------------------
	//Created : 
	Mods_2016_NTE
	// Modified by: Costas Manousakis-(Designer)-(3/27/18 14:48:36)
	Mods_2018_03
	//  `add comments, reset uuids; use LogNewRecordChanges
	Mods_NewDownloadCode  //Make changes to address new upload and download code
	//Add call to Synch_ReturnForward to reset new style vsForward
	//Modified by: Chuck Miller (1/11/22 14:41:42)
End if 
//

SET CHANNEL:C77(10; "")
C_TEXT:C284($CurrBIN)
$CurrBIN:=[NTI_TunnelInfo:181]NTI_i1_s:6
If (Ok=1)
	C_TEXT:C284($ExportHeader)
	RECEIVE VARIABLE:C81($ExportHeader)
	If ($ExportHeader#"TINInspectionExport")
		ALERT:C41("File <"+Document+"> NOT A VALID MADOT BMS TIN Inspection Export data file!!")
	Else 
		RECEIVE RECORD:C79([TIN_Inspections:184])
		vsForward:=Synch_ReturnForward([NTI_TunnelInfo:181]NTI_i6_s:11; [NTI_TunnelInfo:181]NTI_InspResp:73; ""; [TIN_Inspections:184]TeamLeader:11)
		
		If ([TIN_Inspections:184]NTI_i1_S:1=$CurrBIN)
			//Get the Table Number of [TIN_Inspections] table
			C_LONGINT:C283($InspTable; $ElmtTable; $ImgTable; $Num_I_Fields; $Num_El_Fields; $Num_Img_Fields; $BMSTable; $Num_BMS_Fields)
			C_LONGINT:C283($CUSTable; $Num_CUS_Fields; $CombTable; $Num_Comb_Fields)
			ARRAY LONGINT:C221($TablesToUnload_aL; 0)
			$InspTable:=Table:C252(->[TIN_Inspections:184])
			APPEND TO ARRAY:C911($TablesToUnload_aL; $InspTable)
			
			$Num_I_Fields:=Get last field number:C255($InspTable)
			ARRAY POINTER:C280($a_Ptr_InspFields; $Num_I_Fields)
			For ($i; 1; $Num_I_Fields)
				$a_Ptr_InspFields{$i}:=Field:C253($InspTable; $i)
			End for 
			$ImgTable:=Table:C252(->[TIN_Insp_Images:186])
			APPEND TO ARRAY:C911($TablesToUnload_aL; $ImgTable)
			$Num_Img_Fields:=Get last field number:C255(->[TIN_Insp_Images:186])
			ARRAY POINTER:C280($a_Ptr_ImgFields; $Num_Img_Fields)
			For ($i; 1; $Num_Img_Fields)
				$a_Ptr_ImgFields{$i}:=Field:C253($ImgTable; $i)
			End for 
			//add the field trip tables and [PON_ELEM_INSP]
			APPEND TO ARRAY:C911($TablesToUnload_aL; Table:C252(->[TIN_Insp_TmMembers:187]))
			APPEND TO ARRAY:C911($TablesToUnload_aL; Table:C252(->[NTI_ELEM_TIN_INSP:185]))
			
			//start the bar
			C_OBJECT:C1216($InspProgress_o)
			$InspProgress_o:=ProgressNew("Importing Inspection..."; 1; False:C215; " Inspection report"; 0)
			
			//update progress
			UpdateProgressNew($InspProgress_o; 1)
			
			//SHORT_MESSAGE ("Importing Inspection...")
			C_LONGINT:C283($NumTeam_L; $NumElmts_L; $NumPhotos_L; $NumPontisElmt_L; $NumPontisTm_L; $i; $j; $viFldType)
			C_TEXT:C284($vtSkipFields; $FieldName)
			[TIN_Inspections:184]TIN_Inspections_UUIDKey_s:25:=Generate UUID:C1066
			Inc_Sequence("TIN_Inspections"; ->[TIN_Inspections:184]InspectionID:2)
			SAVE RECORD:C53([TIN_Inspections:184])
			InitChangeStack(1)
			//LogNewRecord (->[NTI_TunnelInfo]NTI_i1_s;->[TIN_Inspections]NTI_i1_S;->[TIN_Inspections]InspectionID;1;"TIN_Inspections")
			//C_LONGINT($viFldType)//Command Replaced was o_C_INTEGER
			//For ($i;1;$Num_I_Fields)
			//$FieldName:=Field name($a_Ptr_InspFields{$i})
			//If (($FieldName#"InspectionID") & ($FieldName#"NTI_i1_S"))  //Skip NTI_i1_S and ]InspectionID
			//GET FIELD PROPERTIES($a_Ptr_InspFields{$i};$viFldType)
			//If ($viFldType#Is subtable)  //AND subtables
			//PushChange (1;$a_Ptr_InspFields{$i})
			//End if 
			//End if 
			//End for 
			//FlushGrpChgs (1;->[NTI_TunnelInfo]NTI_i1_s;->[TIN_Inspections]NTI_i1_S;->[TIN_Inspections]InspectionID;1)
			LogNewRecordChanges(->[NTI_TunnelInfo:181]NTI_i1_s:6; ->[TIN_Inspections:184]NTI_i1_S:1; ->[TIN_Inspections:184]InspectionID:2; 1; "TIN_Inspections"; 1)
			C_OBJECT:C1216($InspPartsProgress_o)
			
			RECEIVE VARIABLE:C81($NumTeam_L)
			If ($NumTeam_L>0)  //Team members
				//start the bar
				$InspPartsProgress_o:=ProgressNew("Loading Team"; $NumTeam_L; False:C215; " Team members"; 0)
				//MESSAGE(<>sCR+"Loading Team..")
				For ($i; 1; $NumTeam_L)
					//update progress
					UpdateProgressNew($InspPartsProgress_o; $i)
					//MESSAGE(String($i)+" of "+String($NumTeam_L)+".. ")
					RECEIVE RECORD:C79([TIN_Insp_TmMembers:187])
					[TIN_Insp_TmMembers:187]InspectionID:1:=[TIN_Inspections:184]InspectionID:2
					[TIN_Insp_TmMembers:187]TIN_Insp_TmMembers_UUIDKey_s:3:=Generate UUID:C1066
					SAVE RECORD:C53([TIN_Insp_TmMembers:187])
					LogNewRecord(->[TIN_Inspections:184]InspectionID:2; ->[TIN_Insp_TmMembers:187]InspectionID:1; ->[TIN_Insp_TmMembers:187]PersonID:2; 3; ""; ->[Personnel:42]Person ID:1)
				End for 
				//quit progress
				Progress QUIT(OB Get:C1224($InspPartsProgress_o; "progress"; Is longint:K8:6))
				
			End if 
			
			
			RECEIVE VARIABLE:C81($NumPhotos_L)
			If ($NumPhotos_L>0)  //Images
				$InspPartsProgress_o:=ProgressNew("Loading Images"; $NumPhotos_L; False:C215; " Images"; 0)
				//MESSAGE(<>sCR+"Loading Images..")
				For ($i; 1; $NumPhotos_L)
					UpdateProgressNew($InspPartsProgress_o; $i)
					//MESSAGE(String($i)+" of "+String($NumPhotos_L)+".. ")
					RECEIVE RECORD:C79([TIN_Insp_Images:186])
					Inc_Sequence("TIN_Insp_Images"; ->[TIN_Insp_Images:186]ImageID:2)
					[TIN_Insp_Images:186]InspectionID:1:=[TIN_Inspections:184]InspectionID:2
					[TIN_Insp_Images:186]TIN_Insp_Images_UUIDKey_s:8:=Generate UUID:C1066
					SAVE RECORD:C53([TIN_Insp_Images:186])
					InitChangeStack(1)
					// log the change/duplication here
					//LogNewRecord (->[TIN_Inspections]InspectionID;->[TIN_Insp_Images]InspectionID;->[TIN_Insp_Images]ImageID;2;"TIN_Insp_Images")
					//For ($j;1;$Num_Img_Fields)
					//$FieldName:=Field name($a_Ptr_ImgFields{$j})
					//If (($FieldName#"InspectionID") & ($FieldName#"ImageId"))  //Skip Ids
					//PushChange (1;$a_Ptr_ImgFields{$j})
					//End if 
					//End for 
					//FlushGrpChgs (1;->[TIN_Inspections]InspectionID;->[TIN_Insp_Images]InspectionID;->[TIN_Insp_Images]ImageID;2)
					LogNewRecordChanges(->[TIN_Inspections:184]InspectionID:2; ->[TIN_Insp_Images:186]InspectionID:1; ->[TIN_Insp_Images:186]ImageID:2; 2; "TIN_Insp_Images"; 1)
				End for 
				Progress QUIT(OB Get:C1224($InspPartsProgress_o; "progress"; Is longint:K8:6))
				
			End if 
			
			C_LONGINT:C283($NBEs_L)
			C_LONGINT:C283($oldIDindx_L)
			
			
			RECEIVE VARIABLE:C81($NBEs_L)
			If ($NBEs_L>0)  //NTEs
				$InspPartsProgress_o:=ProgressNew("Loading NTEs"; $NBEs_L; False:C215; " NTEs"; 0)
				//MESSAGE(<>sCR+"Loading NTEs..")
				ARRAY LONGINT:C221($OldNBEIDs_aL; $NBEs_L)
				ARRAY LONGINT:C221($NewNBEIDs_aL; $NBEs_L)
				For ($i; 1; $NBEs_L)
					UpdateProgressNew($InspPartsProgress_o; $i)
					//MESSAGE(String($i)+" of "+String($NBEs_L)+".. ")
					RECEIVE RECORD:C79([NTI_ELEM_TIN_INSP:185])
					$OldNBEIDs_aL{$i}:=[NTI_ELEM_TIN_INSP:185]ELEMID:2
					Inc_Sequence("NTI_ELEM_TIN_INSP"; ->[NTI_ELEM_TIN_INSP:185]ELEMID:2)
					$NewNBEIDs_aL{$i}:=[NTI_ELEM_TIN_INSP:185]ELEMID:2
					[NTI_ELEM_TIN_INSP:185]InspectionID:1:=[TIN_Inspections:184]InspectionID:2
					[NTI_ELEM_TIN_INSP:185]NTI_ELEM_TIN_INSP_UUIDKey_s:23:=Generate UUID:C1066
					InitChangeStack(1)
					LogNewRecordChanges(->[TIN_Inspections:184]InspectionID:2; ->[NTI_ELEM_TIN_INSP:185]InspectionID:1; ->[NTI_ELEM_TIN_INSP:185]ELEMID:2; 2; "NTI_ELEM_TIN_INSP"; 1; ->[NTI_ELEM_TIN_INSP:185]ELEM_PARENT_ID:8; ->[NTI_ELEM_TIN_INSP:185]ELEM_GRANDPARENT_ID:26)
					If ([NTI_ELEM_TIN_INSP:185]ELEM_PARENT_ID:8>0)
						$oldIDindx_L:=Find in array:C230($OldNBEIDs_aL; [NTI_ELEM_TIN_INSP:185]ELEM_PARENT_ID:8)
						C_TEXT:C284($msg)
						
						If ($oldIDindx_L>0)
							If ($NewNBEIDs_aL{$oldIDindx_L}>0)
								[NTI_ELEM_TIN_INSP:185]ELEM_PARENT_ID:8:=$NewNBEIDs_aL{$oldIDindx_L}
								LogLink(->[NTI_ELEM_TIN_INSP:185]ELEM_PARENT_ID:8; ->[TIN_Inspections:184]InspectionID:2; ->[NTI_ELEM_TIN_INSP:185]InspectionID:1; ->[NTI_ELEM_TIN_INSP:185]ELEMID:2; 2; ->[NTI_ELEM_TIN_INSP:185])
							Else 
								$msg:="Element Key "+String:C10([NTI_ELEM_TIN_INSP:185]ELEM_KEY:3)
								$msg:=$msg+"Found ZERO new entry for Parent ID "+String:C10([NTI_ELEM_TIN_INSP:185]ELEM_PARENT_ID:8)+" for parent elem key "+String:C10([NTI_ELEM_TIN_INSP:185]ELEM_PARENT_KEY:7)+<>sCR
								$msg:=$msg+"NEW Parent set to ZERO!"
								[NTI_ELEM_TIN_INSP:185]ELEM_PARENT_ID:8:=0
								LogChanges(->[NTI_ELEM_TIN_INSP:185]ELEM_PARENT_ID:8; ->[TIN_Inspections:184]InspectionID:2; ->[NTI_ELEM_TIN_INSP:185]InspectionID:1; ->[NTI_ELEM_TIN_INSP:185]ELEMID:2; 2)
								ALERT:C41($msg)
								
							End if 
							
						Else 
							$msg:="Element Key "+String:C10([NTI_ELEM_TIN_INSP:185]ELEM_KEY:3)
							$msg:=$msg+"Could not find Parent ID "+String:C10([NTI_ELEM_TIN_INSP:185]ELEM_PARENT_ID:8)+" for parent elem key "+String:C10([NTI_ELEM_TIN_INSP:185]ELEM_PARENT_KEY:7)+<>sCR
							$msg:=$msg+"NEW Parent set to ZERO!"
							[NTI_ELEM_TIN_INSP:185]ELEM_PARENT_ID:8:=0
							LogChanges(->[NTI_ELEM_TIN_INSP:185]ELEM_PARENT_ID:8; ->[TIN_Inspections:184]InspectionID:2; ->[NTI_ELEM_TIN_INSP:185]InspectionID:1; ->[NTI_ELEM_TIN_INSP:185]ELEMID:2; 2)
							ALERT:C41($msg)
						End if 
						
					End if 
					
					If ([NTI_ELEM_TIN_INSP:185]ELEM_GRANDPARENT_ID:26>0)
						$oldIDindx_L:=Find in array:C230($OldNBEIDs_aL; [NTI_ELEM_TIN_INSP:185]ELEM_GRANDPARENT_ID:26)
						C_TEXT:C284($msg)
						
						If ($oldIDindx_L>0)
							If ($NewNBEIDs_aL{$oldIDindx_L}>0)
								[NTI_ELEM_TIN_INSP:185]ELEM_GRANDPARENT_ID:26:=$NewNBEIDs_aL{$oldIDindx_L}
								LogLink(->[NTI_ELEM_TIN_INSP:185]ELEM_GRANDPARENT_ID:26; ->[TIN_Inspections:184]InspectionID:2; ->[NTI_ELEM_TIN_INSP:185]InspectionID:1; ->[NTI_ELEM_TIN_INSP:185]ELEMID:2; 2; ->[NTI_ELEM_TIN_INSP:185])
							Else 
								$msg:="Element Key "+String:C10([NTI_ELEM_TIN_INSP:185]ELEM_KEY:3)
								$msg:=$msg+"Found ZERO new entry for GrandParent ID "+String:C10([NTI_ELEM_TIN_INSP:185]ELEM_GRANDPARENT_ID:26)+" for parent elem key "+String:C10([NTI_ELEM_TIN_INSP:185]ELEM_GRANDPARENT_KEY:25)+<>sCR
								$msg:=$msg+"NEW Parent set to ZERO!"
								[NTI_ELEM_TIN_INSP:185]ELEM_GRANDPARENT_ID:26:=0
								LogChanges(->[NTI_ELEM_TIN_INSP:185]ELEM_GRANDPARENT_ID:26; ->[TIN_Inspections:184]InspectionID:2; ->[NTI_ELEM_TIN_INSP:185]InspectionID:1; ->[NTI_ELEM_TIN_INSP:185]ELEMID:2; 2)
								ALERT:C41($msg)
								
							End if 
							
						Else 
							$msg:="Element Key "+String:C10([NTI_ELEM_TIN_INSP:185]ELEM_KEY:3)
							$msg:=$msg+"Could not find GrandParent ID "+String:C10([NTI_ELEM_TIN_INSP:185]ELEM_GRANDPARENT_ID:26)+" for parent elem key "+String:C10([NTI_ELEM_TIN_INSP:185]ELEM_GRANDPARENT_KEY:25)+<>sCR
							$msg:=$msg+"NEW Parent set to ZERO!"
							[NTI_ELEM_TIN_INSP:185]ELEM_GRANDPARENT_ID:26:=0
							LogChanges(->[NTI_ELEM_TIN_INSP:185]ELEM_GRANDPARENT_ID:26; ->[TIN_Inspections:184]InspectionID:2; ->[NTI_ELEM_TIN_INSP:185]InspectionID:1; ->[NTI_ELEM_TIN_INSP:185]ELEMID:2; 2)
							ALERT:C41($msg)
						End if 
						
					End if 
					
					SAVE RECORD:C53([NTI_ELEM_TIN_INSP:185])
					
				End for 
				Progress QUIT(OB Get:C1224($InspPartsProgress_o; "progress"; Is longint:K8:6))
				
			End if 
			
			//Comments same as photos
			RECEIVE VARIABLE:C81($NumPhotos_L)
			If ($NumPhotos_L>0)  //Comments
				$InspPartsProgress_o:=ProgressNew("Loading Comments"; $NumPhotos_L; False:C215; " Comments"; 0)
				//MESSAGE(<>sCR+"Loading Comments..")
				For ($i; 1; $NumPhotos_L)
					UpdateProgressNew($InspPartsProgress_o; $i)
					//MESSAGE(String($i)+" of "+String($NumPhotos_L)+".. ")
					RECEIVE RECORD:C79([TIN_Insp_Comments:188])
					Inc_Sequence("TIN_Insp_Comments"; ->[TIN_Insp_Comments:188]TIN_InspCommentID_L:3)
					[TIN_Insp_Comments:188]InspectionID:1:=[TIN_Inspections:184]InspectionID:2
					[TIN_Insp_Comments:188]TIN_INSP_CommentsUUIDKey_S:2:=Generate UUID:C1066
					SAVE RECORD:C53([TIN_Insp_Comments:188])
					// log the change/duplication here
					LogNewRecordChanges(->[TIN_Inspections:184]InspectionID:2; ->[TIN_Insp_Comments:188]InspectionID:1; ->[TIN_Insp_Comments:188]TIN_InspCommentID_L:3; 2; "TIN_Insp_Comments"; 1)
					
				End for 
				Progress QUIT(OB Get:C1224($InspPartsProgress_o; "progress"; Is longint:K8:6))
			End if 
			
			
			C_LONGINT:C283($loop_L)
			For ($loop_L; 1; Size of array:C274($TablesToUnload_aL))
				UNLOAD RECORD:C212(Table:C252($TablesToUnload_aL{$loop_L})->)
			End for 
			
			//quit progress
			Progress QUIT(OB Get:C1224($InspProgress_o; "progress"; Is longint:K8:6))
			//CLOSE WINDOW
			C_TEXT:C284($msg_txt)
			$msg_txt:="Loaded inspection "+[TIN_Inspections:184]InspType:21+" for TIN "+[TIN_Inspections:184]NTI_i1_S:1+" dated "+String:C10([TIN_Inspections:184]InspDate:3)+" from file <"+Document+">"
			$msg_txt:=$msg_txt+Char:C90(13)+"If the export is not from the current data file, personnel might not be identified correctly "
			$msg_txt:=$msg_txt+"and would need to be corrected before doing any data transfers!"
			ALERT:C41($msg_txt)
		Else 
			ALERT:C41("Inspection TIN "+[TIN_Inspections:184]NTI_i1_S:1+" not for Current TIN "+$CurrBIN)
		End if 
	End if 
	
	SET CHANNEL:C77(11)
End if 
//End NTI_ImportInspection